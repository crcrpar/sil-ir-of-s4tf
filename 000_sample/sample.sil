sil_stage canonical

import Builtin
import Swift
import SwiftShims

import TensorFlow

func f() -> Tensor<Float>

@_hasInitialValue let x: Tensor<Float>

@_hasInitialValue var y: Tensor<Float>

// x
sil_global hidden [let] @$s6sample1x10TensorFlow0B0VySfGvp : $Tensor<Float>

// y
sil_global hidden @$s6sample1y10TensorFlow0B0VySfGvp : $Tensor<Float>

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  alloc_global @$s6sample1x10TensorFlow0B0VySfGvp // id: %2
  %3 = global_addr @$s6sample1x10TensorFlow0B0VySfGvp : $*Tensor<Float> // user: %6
  // function_ref f()
  %4 = function_ref @$s6sample1f10TensorFlow0B0VySfGyF : $@convention(thin) () -> @owned Tensor<Float> // user: %5
  %5 = apply %4() : $@convention(thin) () -> @owned Tensor<Float> // user: %6
  store %5 to %3 : $*Tensor<Float>                // id: %6
  alloc_global @$s6sample1y10TensorFlow0B0VySfGvp // id: %7
  %8 = global_addr @$s6sample1y10TensorFlow0B0VySfGvp : $*Tensor<Float> // user: %11
  // function_ref f()
  %9 = function_ref @$s6sample1f10TensorFlow0B0VySfGyF : $@convention(thin) () -> @owned Tensor<Float> // user: %10
  %10 = apply %9() : $@convention(thin) () -> @owned Tensor<Float> // user: %11
  store %10 to %8 : $*Tensor<Float>               // id: %11
  %12 = integer_literal $Builtin.Int32, 0         // user: %13
  %13 = struct $Int32 (%12 : $Builtin.Int32)      // user: %14
  return %13 : $Int32                             // id: %14
} // end sil function 'main'

// f()
sil hidden @$s6sample1f10TensorFlow0B0VySfGyF : $@convention(thin) () -> @owned Tensor<Float> {
bb0:
  %0 = metatype $@thin Tensor<Float>.Type         // user: %19
  %1 = metatype $@thin TensorShape.Type           // user: %17
  %2 = integer_literal $Builtin.Word, 2           // user: %4
  // function_ref _allocateUninitializedArray<A>(_:)
  %3 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %4
  %4 = apply %3<Int>(%2) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %6, %5
  %5 = tuple_extract %4 : $(Array<Int>, Builtin.RawPointer), 0 // user: %17
  %6 = tuple_extract %4 : $(Array<Int>, Builtin.RawPointer), 1 // user: %7
  %7 = pointer_to_address %6 : $Builtin.RawPointer to [strict] $*Int // users: %10, %12
  %8 = integer_literal $Builtin.Int64, 1          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %10
  store %9 to %7 : $*Int                          // id: %10
  %11 = integer_literal $Builtin.Word, 1          // user: %12
  %12 = index_addr %7 : $*Int, %11 : $Builtin.Word // user: %15
  %13 = integer_literal $Builtin.Int64, 1         // user: %14
  %14 = struct $Int (%13 : $Builtin.Int64)        // user: %15
  store %14 to %12 : $*Int                        // id: %15
  // function_ref TensorShape.init(arrayLiteral:)
  %16 = function_ref @$s10TensorFlow0A5ShapeV12arrayLiteralACSid_tcfC : $@convention(method) (@owned Array<Int>, @thin TensorShape.Type) -> @owned TensorShape // user: %17
  %17 = apply %16(%5, %1) : $@convention(method) (@owned Array<Int>, @thin TensorShape.Type) -> @owned TensorShape // user: %19
  // function_ref Tensor<>.init(ones:)
  %18 = function_ref @$s10TensorFlow0A0VAASjRzrlE4onesACyxGAA0A5ShapeV_tcfC : $@convention(method) <τ_0_0 where τ_0_0 : Numeric, τ_0_0 : TensorFlowScalar> (@owned TensorShape, @thin Tensor<τ_0_0>.Type) -> @owned Tensor<τ_0_0> // user: %19
  %19 = apply %18<Float>(%17, %0) : $@convention(method) <τ_0_0 where τ_0_0 : Numeric, τ_0_0 : TensorFlowScalar> (@owned TensorShape, @thin Tensor<τ_0_0>.Type) -> @owned Tensor<τ_0_0> // user: %20
  return %19 : $Tensor<Float>                     // id: %20
} // end sil function '$s6sample1f10TensorFlow0B0VySfGyF'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// TensorShape.init(arrayLiteral:)
sil [serialized] [always_inline] @$s10TensorFlow0A5ShapeV12arrayLiteralACSid_tcfC : $@convention(method) (@owned Array<Int>, @thin TensorShape.Type) -> @owned TensorShape

// Tensor<>.init(ones:)
sil [serialized] [always_inline] @$s10TensorFlow0A0VAASjRzrlE4onesACyxGAA0A5ShapeV_tcfC : $@convention(method) <τ_0_0 where τ_0_0 : Numeric, τ_0_0 : TensorFlowScalar> (@owned TensorShape, @thin Tensor<τ_0_0>.Type) -> @owned Tensor<τ_0_0>



